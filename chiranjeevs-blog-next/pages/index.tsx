import { AxiosResponse } from 'axios'
import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import qs from 'qs'
import { fetchArticles, fetchCategories } from '../api'
import ArticleList from '../components/ArticleList'
import Pagination from '../components/Pagination'
import Tabs from '../components/Tabs'
import { IArticle, ICategory, ICollectionResponse } from '../types'

interface IPropTypes {
    categories: {
        items: ICategory[];
    };
    articles:{
      items:IArticle[]
    }

}

const Home:NextPage<IPropTypes> =({categories,articles})=> {
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
       <Tabs categories={categories.items}  />
       <ArticleList articles={articles.items}/>
           <Pagination
                // page={page}
                // pageCount={pageCount}
                // redirectUrl={`/category/${categorySlug}`}
            />
    </>
  )
}

export default Home

export const getServerSideProps: GetServerSideProps = async ({ query }) => {

 //articles

 const options={
 populate: ['author.avatar'],
        sort: ['id:desc'],
 }

 const queryString= qs.stringify(options)

  console.log("queryString",queryString)

   const{
    data:articles
   }:AxiosResponse<ICollectionResponse<IArticle[]>> = await fetchArticles(queryString)

  //categories
 console.log("articles", JSON.stringify(articles,null,2))
    const {
        data: categories,
    }: AxiosResponse<ICollectionResponse<ICategory[]>> =
        await fetchCategories();

  console.log("categories",categories);
  
  return{
    props:{
      categories:{
        items: categories.data
      },
      articles:{
        items:articles.data,
        pagination:articles.meta.pagination
      }
    }
  }
  
}